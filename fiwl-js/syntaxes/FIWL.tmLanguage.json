{
  "version": "https://github.com/atom/language-xml/commit/7bc75dfe779ad5b35d9bf4013d9181864358cb49",
  "name": "FIWL",
  "scopeName": "main.fiwl",
  "patterns": [
    {
      "begin": "(<\\?)\\s*([-_a-zA-Z0-9]+)",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "entity.name.tag.xml"
        }
      },
      "end": "(\\?>)",
      "name": "meta.tag.preprocessor.xml",
      "patterns": [
        {
          "match": " ([a-zA-Z-]+)",
          "name": "entity.other.attribute-name.xml"
        },
        {
          "include": "#doublequotedString"
        },
        {
          "include": "#singlequotedString"
        }
      ]
    },
    {
      "begin": "(<!)(DOCTYPE)\\s+([:a-zA-Z_][:a-zA-Z0-9_.-]*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "keyword.other.doctype.xml"
        },
        "3": {
          "name": "variable.language.documentroot.xml"
        }
      },
      "end": "\\s*(>)",
      "name": "meta.tag.sgml.doctype.xml",
      "patterns": [
        {
          "include": "#internalSubset"
        }
      ]
    },
    {
      "include": "#comments"
    },
    {
      "begin": "(<)((?:([-_a-zA-Z0-9]+)(:))?([A-Z]\\w*)?([-_a-zA-Z0-9:]+)?)(?=(\\s[^>]*)?></\\2>)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "entity.name.tag.xml"
        },
        "3": {
          "name": "entity.name.tag.namespace.xml"
        },
        "4": {
          "name": "punctuation.separator.namespace.xml"
        },
        "5": {
          "name": "support.class.component.js.jsx"
        },
        "6": {
          "name": "entity.name.tag.localname.xml"
        }
      },
      "end": "(>)(</)((?:([-_a-zA-Z0-9]+)(:))?([A-Z]\\w*)?([-_a-zA-Z0-9:]+)?)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "punctuation.definition.tag.xml"
        },
        "3": {
          "name": "entity.name.tag.xml"
        },
        "4": {
          "name": "entity.name.tag.namespace.xml"
        },
        "5": {
          "name": "punctuation.separator.namespace.xml"
        },
        "6": {
          "name": "support.class.component.js.jsx"
        },
        "7": {
          "name": "entity.name.tag.localname.xml"
        },
        "8": {
          "name": "punctuation.definition.tag.xml"
        }
      },
      "name": "meta.tag.no-content.xml",
      "patterns": [
        {
          "include": "#tagStuff"
        }
      ]
    },
    {
      "begin": "(</?)(?:([-\\w\\.]+)((:)))?([A-Z]\\w*)?([-\\w\\.:]+)?",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "entity.name.tag.namespace.xml"
        },
        "3": {
          "name": "entity.name.tag.xml"
        },
        "4": {
          "name": "punctuation.separator.namespace.xml"
        },
        "5": {
          "name": "support.class.component.js.jsx"
        },
        "6": {
          "name": "entity.name.tag.localname.xml"
        }
      },
      "end": "(/?>)",
      "name": "meta.tag.xml",
      "patterns": [
        {
          "include": "#tagStuff"
        }
      ]
    },
    {
      "include": "#entity"
    },
    {
      "include": "#bare-ampersand"
    },
    {
      "begin": "<%@",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.begin.xml"
        }
      },
      "end": "%>",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.end.xml"
        }
      },
      "name": "source.java-props.embedded.xml",
      "patterns": [
        {
          "match": "page|include|taglib",
          "name": "keyword.other.page-props.xml"
        }
      ]
    },
    {
      "begin": "<%[!=]?(?!--)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.begin.xml"
        }
      },
      "end": "(?!--)%>",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.end.xml"
        }
      },
      "name": "source.java.embedded.xml",
      "patterns": [
        {
          "include": "source.java"
        }
      ]
    },
    {
      "begin": "<!\\[CDATA\\[",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.xml"
        }
      },
      "end": "]]>",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.xml"
        }
      },
      "name": "string.unquoted.cdata.xml"
    }
  ],
  "repository": {
    "EntityDecl": {
      "begin": "(<!)(ENTITY)\\s+(%\\s+)?([:a-zA-Z_][:a-zA-Z0-9_.-]*)(\\s+(?:SYSTEM|PUBLIC)\\s+)?",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag.xml"
        },
        "2": {
          "name": "keyword.other.entity.xml"
        },
        "3": {
          "name": "punctuation.definition.entity.xml"
        },
        "4": {
          "name": "variable.language.entity.xml"
        },
        "5": {
          "name": "keyword.other.entitytype.xml"
        }
      },
      "end": "(>)",
      "patterns": [
        {
          "include": "#doublequotedString"
        },
        {
          "include": "#singlequotedString"
        }
      ]
    },
    "bare-ampersand": {
      "match": "&",
      "name": "invalid.illegal.bad-ampersand.xml"
    },
    "accessor": {
      "match": "(>|/|#|@)",
      "name": "punctuation.accessor.js"
    },
    "division": {
      "match": "/",
      "name": "keyword.operator.arithmetic.js"
    },
    "eventParameter": {
      "match": "\\$(parameters|source|event|controller)",
      "name": "variable.parameter.js"
    },
    "dotFunction": {
      "begin": "(\\.)([a-zA-Z_][a-zA-Z0-9_]*)(\\()",
      "beginCaptures": {
        "1": {
          "name": "punctuation.accessor.js"
        },
        "2": {
          "name": "entity.name.function.js"
        },
        "3": {
          "name": "meta.brace.round.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "name": "variable.other.readwrite.js",
      "patterns": [
        {
          "include": "#dataBindingInExpression"
        },
        {
          "include": "#eventParameter"
        },
        {
          "include": "source.js"
        }
      ]
    },
    "function": {
      "begin": "([a-zA-Z_][a-zA-Z0-9_]*)(\\()",
      "beginCaptures": {
        "1": {
          "name": "support.function.js"
        },
        "2": {
          "name": "meta.brace.round.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "name": "variable.other.readwrite.js",
      "patterns": [
        {
          "include": "#dataBindingInExpression"
        },
        {
          "include": "#eventParameter"
        },
        {
          "include": "source.js"
        }
      ]
    },
    "expression": {
      "begin": "\\{:?=",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.js"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.js"
        }
      },
      "name": "variable.other.readwrite.js",
      "patterns": [
        {
          "include": "#division"
        },
        {
          "include": "#entity"
        },
        {
          "include": "#dataBindingInExpression"
        },
        {
          "include": "source.js"
        }
      ]
    },
    "dataBinding": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.js"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.js"
        }
      },
      "name": "variable.other.readwrite.js",
      "patterns": [
        {
          "include": "#accessor"
        },
        {
          "include": "source.js"
        }
      ]
    },
    "dataBindingInExpression": {
      "begin": "(\\$|\\%)\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.js"
        }
      },
      "end": "}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.js"
        }
      },
      "patterns": [
        {
          "include": "#accessor"
        },
        {
          "include": "#eventParameter"
        },
        {
          "include": "source.js"
        }
      ]
    },
    "doublequotedString": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.xml"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.xml"
        }
      },
      "name": "string.quoted.double.xml",
      "patterns": [
        {
          "include": "#entity"
        },
        {
          "include": "#bare-ampersand"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#dotFunction"
        },
        {
          "include": "#function"
        },
        {
          "include": "#dataBinding"
        }
      ]
    },
    "entity": {
      "captures": {
        "1": {
          "name": "punctuation.definition.constant.xml"
        },
        "3": {
          "name": "punctuation.definition.constant.xml"
        }
      },
      "match": "(&)([:a-zA-Z_][:a-zA-Z0-9_.-]*|#[0-9]+|#x[0-9a-fA-F]+)(;)",
      "name": "constant.character.entity.xml"
    },
    "internalSubset": {
      "begin": "(\\[)",
      "captures": {
        "1": {
          "name": "punctuation.definition.constant.xml"
        }
      },
      "end": "(\\])",
      "name": "meta.internalsubset.xml",
      "patterns": [
        {
          "include": "#EntityDecl"
        },
        {
          "include": "#parameterEntity"
        },
        {
          "include": "#comments"
        }
      ]
    },
    "parameterEntity": {
      "captures": {
        "1": {
          "name": "punctuation.definition.constant.xml"
        },
        "3": {
          "name": "punctuation.definition.constant.xml"
        }
      },
      "match": "(%)([:a-zA-Z_][:a-zA-Z0-9_.-]*)(;)",
      "name": "constant.character.parameter-entity.xml"
    },
    "singlequotedString": {
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.xml"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.xml"
        }
      },
      "name": "string.quoted.single.xml",
      "patterns": [
        {
          "include": "#entity"
        },
        {
          "include": "#bare-ampersand"
        },
        {
          "include": "#expression"
        },
        {
          "include": "#dotFunction"
        },
        {
          "include": "#function"
        },
        {
          "include": "#dataBinding"
        }
      ]
    },
    "tagStuff": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.namespace.xml"
            },
            "2": {
              "name": "entity.other.attribute-name.xml"
            },
            "3": {
              "name": "punctuation.separator.namespace.xml"
            },
            "4": {
              "name": "entity.other.attribute-name.localname.xml"
            }
          },
          "match": "(?:^|\\s+)(?:([-\\w.]+)((:)))?([-\\w.:]+)\\s*="
        },
        {
          "include": "#doublequotedString"
        },
        {
          "include": "#singlequotedString"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "begin": "<%--",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.xml"
            },
            "end": "--%>",
            "name": "comment.block.xml"
          }
        },
        {
          "begin": "<!--",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.xml"
            }
          },
          "end": "-->",
          "name": "comment.block.xml",
          "patterns": [
            {
              "begin": "--(?!>)",
              "captures": {
                "0": {
                  "name": "invalid.illegal.bad-comments-or-CDATA.xml"
                }
              }
            }
          ]
        }
      ]
    }
  }
}
